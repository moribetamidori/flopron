import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
export const NodeDetailsModal = ({ selectedNode, sidebarCollapsed, onClose, }) => {
    const [enlargedImage, setEnlargedImage] = useState(null);
    if (!selectedNode || !selectedNode.dataLog)
        return null;
    return (_jsx("div", { className: "absolute inset-0 flex items-center justify-center pointer-events-none", children: _jsxs("div", { className: "bg-black/95 border border-cyan-400/50 rounded-lg p-8 text-cyan-400 font-mono max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto transition-all duration-300 pointer-events-auto", style: {
                transform: sidebarCollapsed ? "translateX(0)" : "translateX(160px)",
            }, children: [_jsxs("div", { className: "flex justify-between items-start", children: [_jsx("h3", { className: "text-xl font-bold", children: selectedNode.id }), _jsx("button", { onClick: onClose, className: "text-cyan-400 hover:text-white transition-colors text-lg", children: "\u2715" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { children: [_jsx("span", { className: "text-cyan-300 font-semibold", children: "Timestamp:" }), _jsx("span", { className: "ml-2 text-white", children: selectedNode.dataLog.timestamp.toLocaleString() })] }), _jsxs("div", { children: [_jsx("span", { className: "text-cyan-300 font-semibold", children: "Tags:" }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: selectedNode.dataLog.tags.map((tag, index) => (_jsx("span", { className: "px-3 py-1 bg-cyan-400/20 border border-cyan-400/50 rounded text-sm", children: tag }, index))) })] }), _jsxs("div", { children: [_jsx("span", { className: "text-cyan-300 font-semibold", children: "Content:" }), _jsx("p", { className: "mt-2 text-white text-sm leading-relaxed", children: selectedNode.dataLog.content })] }), selectedNode.dataLog.images.length > 0 && (_jsxs("div", { children: [_jsx("span", { className: "text-cyan-300 font-semibold", children: "Images:" }), _jsx("div", { className: "flex flex-wrap gap-4 mt-2", children: selectedNode.dataLog.images.map((image, index) => (_jsxs("div", { className: "flex flex-col items-center", children: [_jsx("img", { src: image, alt: `Image ${index + 1}`, className: "w-32 h-32 object-cover rounded border border-purple-400/50 bg-purple-400/10 cursor-pointer hover:border-purple-400/80 transition-colors", onClick: () => setEnlargedImage(image), onError: (e) => {
                                                    const target = e.target;
                                                    target.style.display = "none";
                                                } }), _jsx("span", { className: "text-xs text-purple-300 mt-1 text-center", children: image })] }, index))) })] })), selectedNode.dataLog.links.length > 0 && (_jsxs("div", { children: [_jsx("span", { className: "text-cyan-300 font-semibold", children: "Links:" }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: selectedNode.dataLog.links.map((link, index) => (_jsx("a", { href: link, target: "_blank", rel: "noopener noreferrer", className: "px-3 py-1 bg-blue-400/20 border border-blue-400/50 rounded text-sm text-blue-300 hover:bg-blue-400/30 transition-colors", children: link }, index))) })] })), enlargedImage && (_jsx("div", { className: "absolute inset-0 flex items-start justify-center pt-8 pointer-events-none bg-black/90 z-10", children: _jsxs("div", { className: "relative max-w-[70%] max-h-[60%] pointer-events-auto", children: [_jsx("img", { src: enlargedImage, alt: "Enlarged image", className: "max-w-full max-h-full object-contain rounded border border-purple-400/50" }), _jsx("button", { onClick: () => setEnlargedImage(null), className: "absolute -top-2 -right-2 text-purple-400 hover:text-white transition-colors text-sm bg-black/90 rounded-full w-6 h-6 flex items-center justify-center border border-purple-400/50 cursor-pointer", children: "\u2715" })] }) }))] })] }) }));
};
